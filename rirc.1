'\" t
.TH RIRC 1 rirc\-VERSION
.SH NAME
rirc \- a minimalistic internet relay chat client
.SH SYNOPSIS
\fBrirc\fR [ \fB-hv\fR ] [ \fB-s\fR \fIserver\fR [ \fB...\fR ]]
.SH OPTIONS
.TP 4
.B "-h, --help"
Print help message and exit
.TP
.B "-v, --version"
Print rirc version and exit
.TP
.BI "-s, --server=" server
Set connection \fIhostname\fP
.TP
.BI "-p, --port=" port
Set connection \fIport\fP
.TP
.BI "-w, --pass=" pass
Set IRC \fIpassword\fP
.TP
.BI "-u, --username=" username
Set IRC \fIusername\fP
.TP
.BI "-r, --realname=" realname
Set IRC \fIrealname\fP
.TP
.BI "-m, --mode=" modes
Set IRC user \fImodes\fP
.TP
.BI "-n, --nicks=" nicks
Set comma separated list of \fInicks\fP to use
.TP
.BI "-c, --chans=" chans
Set comma separated list of \fIchannels\fP to join
.TP
.BI --tls-cert= path
Set TLS client certificate file \fIpath\fP
.TP
.BI --tls-ca-file= path
Set TLS peer certificate file \fIpath\fP
.TP
.BI --tls-ca-path= path
Set TLS peer certificate directory \fIpath\fP
.TP
.BI --tls-verify= mode
Set TLS peer certificate verification \fImode\fP:
.EX
\(bu \fIdisabled\fP - cert is not verified
\(bu \fIoptional\fP - cert is verified, handshake continues on error
\(bu \fIrequired\fP - cert is verified, handshake is aborted on error (default)
.EE
.TP
.B --tls-disable
Set TLS disabled
.TP
.BI --sasl= mechanism
Authenticate with SASL \fImechanism\fP:
.EX
\(bu \fIexternal\fP - requires \fI--tls-cert\fP
\(bu \fIplain\fP    - requires \fI--sasl-user\fP and \fI--sasl-pass\fP
.EE
.TP
.BI --sasl-user= user
Authenticate with SASL \fIusername\fP
.TP
.BI --sasl-pass= pass
Authenticate with SASL \fIpassword\fP
.TP
.B --ipv4
Use IPv4 addresses only
.TP
.B --ipv6
Use IPv6 addresses only
.SH USAGE
rirc is controlled by a combination of keys and commands, where:
  <arg> denotes required arguments
  [arg] denotes optional arguments
.TP
Commands:
 \fB:clear\fP
 \fB:close\fP
 \fB:connect\fP [hostname] [options]
 \fB:disconnect\fP
 \fB:quit\fP
.TP
Keys:
 \fB^N\fP    Go to next buffer
 \fB^P\fP    Go to previous buffer
 \fB^L\fP    Clear current buffer
 \fB^X\fP    Close current buffer
 \fB^C\fP    Cancel current input/action
 \fB^U\fP    Scroll current buffer back
 \fB^D\fP    Scroll current buffer forward
 \fBPgUp\fP  Scroll current buffer back
 \fBPgDn\fP  Scroll current buffer forward
 \fBHome\fP  Scroll current buffer to top
 \fBEnd\fP   Scroll current buffer to bottom
 \fB ←\fP    Input cursor back
 \fB →\fP    Input cursor forward
 \fB ↑\fP    Input history back
 \fB ↓\fP    Input history forward
.TP
IRC commands:
 \fB/away\fP [away message]
 \fB/join\fP [target, [targets...]]
 \fB/kick\fP <channel> <nick>
 \fB/mode\fP <target> <modes>
 \fB/nick\fP <nick>
 \fB/notice\fP <target> <message>
 \fB/part\fP [target] [message]
 \fB/privmsg\fP <target> <message>
 \fB/quit\fP [message]
 \fB/topic\fP [topic]
 \fB/topic-unset\fP
 \fB/whois\fP <target>
.TP
CTCP commands
 \fB/ctcp-action\fP <target> <message>
 \fB/ctcp-clientinfo\fP [target]
 \fB/ctcp-finger\fP [target]
 \fB/ctcp-ping\fP [target]
 \fB/ctcp-source\fP [target]
 \fB/ctcp-time\fP [target]
 \fB/ctcp-userinfo\fP [target]
 \fB/ctcp-version\fP [target]
.TP
IRCv3 commands
 \fB/cap-ls\fP
 \fB/cap-list\fP
.SH SEE ALSO
.UR https://rcr.io/rirc/
Additional documentation
.UE .
.SH AUTHORS
.MT mail@rcr.io
Richard 'rcr' Robbins
.ME .
